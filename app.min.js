Alteryx.Gui.BeforeLoad = function(manager, AlteryxDataItems){
  console.log("Before Load ----");
  var dataItem = makeDataItem(manager, AlteryxDataItems);
  initializeDataItemsBeforeLoad(dataItem, items);
  dataItem('Model Name', {value: getDefaultModelName()});
};

Alteryx.Gui.AfterLoad = function(manager){
  console.log("After Load ----");
  makeFieldMap('X Vars', ['numeric', 'string']);
  displayTarget('show-on-regularization', 'regularization');
  displayTarget('show-on-cv', 'internal_cv');
  displayTarget('show-on-set_seed_internal_cv', 'set_seed_internal_cv');
  displayTarget('show-on-no-cv', 'internal_cv', function(v){return !v});
  displayTarget('div-link', 'regularization', function(v){return !v});
  displayTarget('show-on-external-cv', 'external_cv');
  displayTarget('show-on-set-seed-external-cv', 'set_seed_external_cv');
  activateDisplayRules(displayRules);
  syncDataItemsAfterLoad(items);
  setupPages();
  hideRegularizationOnXDF();
};

Alteryx.Gui.Annotation = function(manager){
  return manager.GetDataItemByDataName("Model Name").value;
};

function hideRegularizationOnXDF(){
  var manager = Alteryx.Gui.manager;
  if (isXDF(manager)){
    $('#hide-on-xdf').hide();
  }
}

function isXDF(manager){
  if (manager.metaInfo.Get(0)){
    let field = manager.metaInfo.Get(0)._GetFields()[0];
    var src;
    if (typeof fields === 'undefined'){
      src = false;
    } else {
      src = field.strSource;
    }
    try {
      return JSON.parse(src).Context === 'XDF';
    } 
    catch(e) {
      return false;
    }
  } else {
    return false;
  }
}
